// После знакомства с областями видимости и замыканиями, вернёмся к нашей задаче.Что же случилось у нас в коде ? 
// Почему программа не работает как надо ?

// for (var i = 0; i < thumbnails.length; i++) {
//     thumbnails[i].addEventListener('click', function () {
//         fullPhoto.src = photos[i];
//     });
// }

// Обработчики, которые мы создали, используют значение счётчика i. Сложность в том, что обработчики срабатывают не сразу,
// а в момент наступления события.К тому моменту, когда первое событие клика выполняется, цикл полностью отработал,
// значение счётчика стало максимальным — 5, и функция - обработчик берёт именно это значение.

//Цикл не создаёт отдельную область видимости, это ведь не функция.
//Поэтому значение i находится в глобальной области и каждый обработчик обращается к этому значению 5. 
//А у нас нет миниатюры с таким индексом и элемента в массиве photos, поэтому никакая картинка и не подставляется.

// Как нам это исправить ? Нам помогут замыкания!

// Мы создадим функцию, которая будет принимать в качестве параметров миниатюру и подходящий элемент из массива photos.
// А уже внутри этой функции будем добавлять обработчики.
// Тогда каждый обработчик будет брать значения из своего замыкания — из параметров функции, в которой находится обработчик.

// У каждого обработчика будет собственное замыкание, поэтому значения в обработчиках не будут повторяться, как это было раньше.

// Давайте постепенно улучшим нашу программу так, чтобы она работала корректно.

var photos = [
    'gallery/3.jpg',
    'gallery/4.jpg',
    'gallery/5.jpg',
    'gallery/6.jpg',
    'gallery/7.jpg',
    'gallery/8.jpg',
    'gallery/9.jpg',
    'gallery/10.jpg',
    'gallery/11.jpg',
    'gallery/12.jpg',
    'gallery/13.jpg',
    'gallery/14.jpg',
    'gallery/15.jpg',
    'gallery/16.jpg',
    'gallery/17.jpg',
    'gallery/18.jpg',
    'gallery/19.jpg',
    'gallery/20.jpg',
    'gallery/21.jpg',
    'gallery/2.jpg',
];

var thumbnails = document.querySelectorAll('.gallery__photo-preview');
var fullPhoto = document.querySelector('.full-photo');

/*  It's not gonna work!
for (var i = 0; i < thumbnails.length; i++) {
    thumbnails[i].addEventListener('click', function () {
        fullPhoto.src = photos[i];
    });
}
*/

//  Используем замыкание: photo & function() 
var addThumbnailClickHandler = function(thumbnail, photo) {
    thumbnail.addEventListener('click', function() {
        fullPhoto.src = photo;
    });
};

for (var i = 0; i < thumbnails.length; i++) {
    addThumbnailClickHandler(thumbnails[i], photos[i]);
}

// На каждой итерации мы передаём разные значения в addThumbnailClickHandler.
// Каждый обработчик получает своё замыкание, в котором находятся какие - то конкретные значения параметров thumbnail, photo.
// Именно эти значения использует каждый обработчик при происхождении события.
// И теперь значение индекса в уже отработавшем цикле никак не влияет на нашу программу.